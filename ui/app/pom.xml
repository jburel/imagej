<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.imagej</groupId>
		<artifactId>pom-ij-ui</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>ij-app</artifactId>

	<name>ImageJ Application</name>
	<description>The app component is the top-level ImageJ application. It brings together all the components into the final application. It launches the Swing user interface by default, but other interfaces are equally possible.</description>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-ui</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>net.java.sezpoz</groupId>
			<artifactId>sezpoz</artifactId>
			<version>${sezpoz.version}</version>
			<!-- NB: Technically, the scope of SezPoz for ij-app is only test.
				But transitively, it is needed at runtime, and setting it to test
				here hoses things up. So we use compile scope instead; the
				dependency:analyze checker does not seem to mind.
			<scope>test</scope>
			-->
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-io</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-legacy</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-options</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-script-beanshell</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-platform-macosx</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-plugins-app</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-plugins-data</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-plugins-debug</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-plugins-display</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-plugins-misc</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-tools</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>ij-updater-ssh</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/application.xml</descriptor>
					</descriptors>
					<finalName>imagej-${project.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<packageName>imagej</packageName>
							<mainClass>imagej.Main</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<executable>java</executable>
					<arguments>
						<argument>-classpath</argument>
						<classpath/>
						<argument>imagej.Main</argument>
					</arguments>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- NB: for project parent, in case of partial checkout -->
	<repositories>
		<repository>
			<id>imagej.releases</id>
			<url>http://maven.imagej.net/content/repositories/releases</url>
		</repository>
		<repository>
			<id>imagej.snapshots</id>
			<url>http://maven.imagej.net/content/repositories/snapshots</url>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>awt</id>
			<activation>
				<property>
					<name>ij.ui</name>
					<value>awt</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-awt</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>pivot</id>
			<activation>
				<property>
					<name>ij.ui</name>
					<value>pivot</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-pivot</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>swing</id>
			<activation>
				<property>
					<name>!ij.ui</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-base</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-plugins</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-sdi</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-tools</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-updater</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>swing-mdi</id>
			<activation>
				<property>
					<name>ij.ui</name>
					<value>swing-mdi</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-base</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-mdi</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-plugins</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-tools</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swing-updater</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>swt</id>
			<activation>
				<property>
					<name>ij.ui</name>
					<value>swt</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>ij-ui-swt</artifactId>
					<version>${project.version}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>deps</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/all.xml</descriptor>
							</descriptors>
							<finalName>imagej-${project.version}</finalName>
							<archive>
								<manifest>
									<mainClass>imagej.Main</mainClass>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- HACK: The m2e plugin does not support copy or unpack. -->
		<profile>
			<id>not-eclipse</id>
			<activation>
				<property>
					<name>!m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ij-launcher</artifactId>
											<version>${project.version}</version>
											<type>nar</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
											<destFileName>ij-launcher.jar</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>unpack</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ij-launcher</artifactId>
											<version>${project.version}</version>
											<classifier>amd64-Linux-gcc-executable</classifier>
											<type>nar</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ij-launcher</artifactId>
											<version>${project.version}</version>
											<classifier>i386-Linux-gcc-executable</classifier>
											<type>nar</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ij-launcher</artifactId>
											<version>${project.version}</version>
											<classifier>amd64-Windows-gcc-executable</classifier>
											<type>nar</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ij-launcher</artifactId>
											<version>${project.version}</version>
											<classifier>x86-Windows-gcc-executable</classifier>
											<type>nar</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ij-launcher</artifactId>
											<version>${project.version}</version>
											<classifier>i386-MacOSX-gcc-executable</classifier>
											<type>nar</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>ij-launcher</artifactId>
											<version>${project.version}</version>
											<classifier>x86_64-MacOSX-gcc-executable</classifier>
											<type>nar</type>
											<outputDirectory>${project.build.directory}/</outputDirectory>
										</artifactItem>
									</artifactItems>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
